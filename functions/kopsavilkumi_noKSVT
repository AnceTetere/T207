kopsavilkumi_noKSVT <- function(x) {
  KSVT_vec <- switch(
    as.character(kopsNr),
    "01" = c(1, 2, 3, 4, 5, 6, 7, 8, 9),
    "23" = c(1, 2, 3, 4, 82, 83),
    "24" = c(5, 6, 7, 9, 84, 86, 87),
    "45" = c(1, 2, 82, 83),
    stop("Kopsavilkuma numurs nav atpazīts.")
  )
  
  # Tiek definēts tukšs BIND_vec vektors, kas pēcāk tiks aizpildīts ar apakštabulām, 
  # kuras veidosies no KSVT kodu atlases.
  BIND_vec <- character(0)
  
  if (kopsNr == "01" || kopsNr == "23" || kopsNr == "24") {
    for (i in 1:length(KSVT_vec)) {
      # Te, lai kods pēcāk nemestu kļūdas, uzreiz pārliecinos, ka saņemtajā datnē vispār ir tādi kodi, 
      # kas sākas ar KSVT_vec komplektā definēto elementu. Ja nav, paziņo, kurš elements tika meklēts, bet neatrasts.
      # Lai pēcāk neliktos, ka kaut kas aizmirsts.
      if ((sum(substr(x$KSVT, 1, nchar(KSVT_vec[i])) == KSVT_vec[i])) == 0) {
        print(paste0("Datnē nav tādu KSVT kodu, kas sāktos ar ", KSVT_vec[i]))
      } else {
        # Ja dotie KSVT kodi datnē ir, tad pārbauda vai elements definēts vienā vai divās zīmēs 
        # un attiecīgi veido apakštabulas.
        # Jaunizveidoto apakštabulu nosaukumus kārto BIND_vec
        if (nchar(KSVT_vec[i]) == 1) {
          tab_name <- paste0("x", i)
          BIND_vec <- c(BIND_vec, list(tab_name))
          assign(tab_name, x[substr(x$KSVT, 1, 1) == KSVT_vec[i], c("B2z", rinda, "KSVT")])
        } else if (nchar(KSVT_vec[i]) == 2) {
          tab_name <- paste0("x", i)
          BIND_vec <- c(BIND_vec, list(tab_name))
          assign(tab_name, x[substr(x$KSVT, 1, 2) == KSVT_vec[i], c("B2z", rinda, "KSVT")])
          rm(tab_name)
        } else {
          stop("Kaut kas ar KSVT kodiem nav kārtībā.")
        }
      }
    }

    
    # No izejošās datnes x, pārtaisa tukšu datu rāmi, kas sastāv tik no aiļu nosaukumiem,
    # kuram, sekojot BIND_vec sarakstam, šuj klāt un kopā apakštabulas x1, x2 utt.
    # Tikko apakštabula piešūta, to izdzēs no saraksta (Global Environment). 
    y <- x[0,]
    
    for (i in BIND_vec) {
      y <- rbind(y, get(i))
      rm(list = i)
    }      
    
    rm(BIND_vec, i)
    rownames(y) <- NULL
    #print(paste0("tabula y ir ", kopsNr, ". kopsavilkums. \n"))
  } else {
    stop("Kopsavilkuma numurs nav atpazīts")
  }
  rm(KSVT_vec)
  
  return(N_2z(y))
  rm(y)
}
